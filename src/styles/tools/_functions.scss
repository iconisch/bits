// Return value from global variable maps
// --------------------------------
@function gutter($key: 'd', $unit: 'px') {
  @return map-get($gutters, $key);
}

@function wrapper($key: 'd') {
  @return map-get($wrapper-widths, $key);
}

@function spacing($key: 'd') {
  @return map-get($spacing-units, $key);
}

@function z-index($key: 'd') {
  @return map-get($z-indexes, $key);
}

@function border-radius($key: 'd') {
  @return map-get($border-radii, $key);
}

@function shadow($key: 'd') {
  @return map-get($shadows, $key) rgba(black, .15);
}

@function font-family($key) {
  @return map-get($font-families, $key);
}

@function font-size($key: 'd') {
  @return map-get($font-sizes, $key);
}

@function font-weight($key: 'n') {
  @return map-get($font-weights, $key);
}

@function line-height($key: 'd') {
  @return map-get($line-heights, $key);
}

@function color($key: 'grey') {
  @return map-get($colors, $key);
}

@function transition($key: 'standard') {
  @return map-get($transitions, $key);
}


// Utilities
// --------------------------------
@function to-str($value) {
  @return $value + '';
}

@function infinite() {
  @return 99999999px;
}

@function str-split($string, $splitter: '-') {
  $parts: ();
  $index : str-index($string, $splitter);
  @while $index {
    $part: str-slice($string, 1, $index - 1);
    $parts: append($parts, $part);
    $string: str-slice($string, $index + 1);
    $index : str-index($string, $splitter);
  }
  $parts: append($parts, $string);

  @return $parts;
}

@function abbreviate($term, $chars: 1, $splitter: '-') {
  $parts: str-split($term);
  $abbr-term: '';
  @each $part in $parts {
    $abbr: str-slice($part, 1, $chars);
    $abbr-term: $abbr-term + $abbr;
  }
  @return $abbr-term;
}
